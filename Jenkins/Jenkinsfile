node {
  def app
  def nginx

  stage('Clone Repo') {
    sh 'rm -rf *'
    checkout scm
  }

  stage('Minikube Rules update') {
    sh 'kubectl version'
    sh 'kubectl get pods'
  }

  stage('Build app') {
    app = docker.build('f3rnand3s/app-auto', 'app/')
  }

  stage('Build nginx') {
    nginx = docker.build('f3rnand3s/nginx-auto', 'nginx/')
  }

  stage('Test app') {
    app.inside {
      dir('app') {
        sh 'npm install --cache /tmp/empty-cache'
        sh 'npm test'
      }
    }
  }

  stage('Test nginx') {
    nginx.inside {
      dir('nginx') {
        sh 'nginx -v'
        
        // Funciona mas devido como est√° criado a imagem ela n passa pelo teste.
        // sh 'nginx -c /etc/nginx/nginx.conf -t'
      }
    }
  }

  stage('Push app image') {
    docker.withRegistry('https://registry.hub.docker.com/f3rnand3s/app-auto', 'docker-creds') {
      app.push("${env.BUILD_NUMBER}")
      app.push("latest")
    }
    echo "Pushing app Docker image to DockerHub"
  }

  stage('Push nginx image') {
    docker.withRegistry('https://registry.hub.docker.com/f3rnand3s/nginx-auto', 'docker-creds') {
      nginx.push("${env.BUILD_NUMBER}")
      nginx.push("latest")
    }
    echo "Pushing nginx Docker image to DockerHub"
  }

  stage('Clean up') {
    sh 'docker rmi f3rnand3s/app-auto:latest'
    sh 'docker rmi registry.hub.docker.com/f3rnand3s/app-auto:latest'
    sh "docker rmi registry.hub.docker.com/f3rnand3s/app-auto:${env.BUILD_NUMBER}"
    sh 'docker rmi f3rnand3s/nginx-auto:latest'
    sh 'docker rmi registry.hub.docker.com/f3rnand3s/nginx-auto:latest'
    sh "docker rmi registry.hub.docker.com/f3rnand3s/nginx-auto:${env.BUILD_NUMBER}"
    sh 'rm -rf *'
  }
}